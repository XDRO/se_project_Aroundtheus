!function(){"use strict";class e{constructor(e,t,s){let{name:n,link:o}=e;this._name=n,this._link=o,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}_getElement(){return document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0)}getView(){this._cardElement=this._getElement();const e=this._cardElement.querySelector(".card__description-text"),t=this._cardElement.querySelector(".card__image");return t.src=this._link,t.alt=this._name,e.textContent=this._name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._errorClass=e.errorClass,this._inputErrorClass=e.inputErrorClass,this._inactiveButtonClass=e.inactiveButtonClass,this._form=t,this._inputElements=Array.from(t.querySelectorAll(this._inputSelector)),this._submitButton=t.querySelector(this._submitButtonSelector)}_showInputError(e,t){e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e,t){const s=e.querySelector(`#${t.id}-error`);t.classList.remove(this._inputErrorClass),s.textContent=""}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}toggleButtonState(){if(this._hasInvalidInput())return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_checkInputValidity(e,t){t.validity.valid?this._hideInputError(e,t):this._showInputError(t,document.querySelector(`#${t.id}-error`))}setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(this._form,e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this.setEventListeners()}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._popupClose=this._popupElement.querySelector(".modal__close")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupClose.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("mousedown",(e=>{e.target.classList.contains("modal_opened")&&this.close()}))}}class n extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t}close(){this._popupForm.reset(),super.close()}_getInputValues(){const e=this._popupForm.querySelectorAll(".modal__input"),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setInputValues(e){this._popupForm.querySelectorAll(".modal__input").forEach((t=>{e[t.name]&&(t.value=e[t.name])}))}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}}document.querySelectorAll(".modal");const o=document.querySelector("#profile-edit-button"),r=document.querySelector("#profile-edit-modal"),i=document.querySelector("#profile-add-modal"),a=r.querySelector("#edit-card-form"),l=i.querySelector(".modal__form"),c=(document.querySelector(".cards__list"),document.querySelector("#profile-add-button")),u={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},d=new n("#profile-add-modal",(function(e){const t=h(e);E.addItem(t),d.close()}));d.setEventListeners();const m=new class{constructor(e,t){this._nameElement=document.querySelector(e),this._descriptionElement=document.querySelector(t)}getUserInfo(){return{name:this._nameElement.textContent,description:this._descriptionElement.textContent}}setUserInfo(e){this._nameElement.textContent=e.name,this._descriptionElement.textContent=e.description}}(".profile__title",".profile__description"),p=new n("#profile-edit-modal",(e=>{m.setUserInfo(e),p.close()}));p.setEventListeners();const _=new class extends s{constructor(e){super({popupSelector:e}),this._popupImage=document.querySelector(".modal__preview-image"),this._popupImageDescription=document.querySelector(".modal__preview-description")}open(e){e&&(this._popupImage.src=e.link,this._popupImage.alt=e.name,this._popupImageDescription.textContent=e.name),super.open()}}("#preview-image-modal");function h(t){return new e(t,"#card-template",v).getView()}_.setEventListeners();const E=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg",alt:"Yosemite Valley"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg",alt:"Lake Lousie"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg",alt:"Bald Mountains"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg",alt:"Latemar"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg",alt:"Vanoise National Park"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg ",alt:"Lago di Braies"}],renderer:e=>{const t=h(e);E.addItem(t)}},".cards__list");function v(e){_.open(e)}E.renderItems(),new t(u,a).enableValidation();const S=new t(u,l);S.enableValidation(),o.addEventListener("click",(()=>{const e=m.getUserInfo();p.setInputValues(e),p.open()})),c.addEventListener("click",(()=>{S.toggleButtonState(),d.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,